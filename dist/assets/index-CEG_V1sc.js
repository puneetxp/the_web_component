(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();function o(r,e){if(r.key==="Enter"&&r.target instanceof HTMLInputElement&&r.target.value){e.itemList.insertBefore(e.chip(r.target.value),r.target),r.target.value="";const t=[...e.querySelectorAll(".editable-list-remove-item")];e.handleRemoveItemListeners(t)}}class a extends HTMLElement{constructor(){super();const e=document.createElement("div"),t=this.title;this.addItemText;const n=this.items;e.classList.add("editable-list","relative"),e.innerHTML=`
        <div class="bg-gray-50 item-list flex flex-wrap gap-2 justify-center group hover:bg-sky-50 hover:shadow hover:ring-sky-50 p-2.5 rounded-lg">
          ${n.map(i=>this.chip(i).outerHTML).join("")}
            <input id="floating_name" placeholder='' class="peer bg-transparent border-1 group-focus:border-b-1 focus:outline-none add-new-list-item-input" type="text">
            <label for="floating_name" class="pl-2 absolute top-3 left-0 z-10 origin-[0] -translate-y-6 scale-75 transform text-red-700 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:left-0 peer-focus:-translate-y-6 peer-focus:scale-75 peer-focus:border-red-700 peer-[.list]:left-0 peer-[.list]:-translate-y-6 peer-[.list]:scale-75">
            ${t}
        </label>
        </div>
      `,this.addListItem=this.addListItem.bind(this),this.handleRemoveItemListeners=this.handleRemoveItemListeners.bind(this),this.removeListItem=this.removeListItem.bind(this),this.appendChild(e)}chip(e){const t=document.createElement("div");return t.classList.add("p-2","peer","list","shadow","rounded-lg","relative"),t.innerHTML=`
            <span class="mr-7">${e}</span>
            <button class="editable-list-remove-item bg-red-100 hover:bg-red-300 h-7 w-7 text-xl icon cursor-pointer rotate-45 rounded-full text-slate-700 hover:text-white" style="position: absolute;top: 0;right: 0;margin: 3px;"><span style="margin: auto;width: 100%;display: block;position: absolute;right: -0.2px;top: -0.2px;" class="">&oplus;</span></button>
        `,t}addListItem(e){if(this.inputElement.value){this.itemList.appendChild(this.chip(this.inputElement.value)),this.inputElement.value="";const t=[...this.querySelectorAll(".editable-list-remove-item")];this.handleRemoveItemListeners(t)}}connectedCallback(){const e=[...this.querySelectorAll(".editable-list-remove-item")];this.inputElement=this.querySelector(".add-new-list-item-input"),this.itemList=this.querySelector(".item-list"),this.handleRemoveItemListeners(e),this.inputElement.addEventListener("keydown",t=>{o(t,this)},!1)}get title(){return this.getAttribute("title")||""}get items(){const e=[];return[...this.attributes].forEach(t=>{t.name.includes("list-item")&&e.push(t.value)}),e}get addItemText(){return this.getAttribute("add-item-text")||""}handleRemoveItemListeners(e){e.forEach(t=>{t.addEventListener("click",this.removeListItem,!1)})}removeListItem(e){e.target.parentNode.parentNode.remove()}}customElements.define("editable-list",a);
